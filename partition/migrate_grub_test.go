// -*- Mode: Go; indent-tabs-mode: t -*-

/*
 * Copyright (C) 2014-2015 Canonical Ltd
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package partition

import (
	"bytes"
	"io/ioutil"
	"path/filepath"

	. "gopkg.in/check.v1"
)

const oldConfigHeader string = `#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  set have_grubenv=true
  load_env
fi
if [ "${next_entry}" ] ; then
`

func (s *PartitionTestSuite) TestMigrateDetectsOldConfig(c *C) {
	bootloaderGrubConfigFile = filepath.Join(c.MkDir(), "grub.cfg")
	err := ioutil.WriteFile(bootloaderGrubConfigFile, []byte(oldConfigHeader), 0644)
	c.Assert(err, IsNil)

	r := bytes.NewBufferString(oldConfigHeader)
	c.Assert(isOldGrubConfig(r.String()), Equals, true)
}

func (s *PartitionTestSuite) TestMigrateNotMisdetects(c *C) {
	bootloaderGrubConfigFile = filepath.Join(c.MkDir(), "grub.cfg")
	err := ioutil.WriteFile(bootloaderGrubConfigFile, []byte(newGrubConfig), 0644)
	c.Assert(err, IsNil)

	r := bytes.NewBufferString(oldConfigHeader)
	c.Assert(isOldGrubConfig(r.String()), Equals, true)
}
